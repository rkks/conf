# regular bash usage aliases
[[ -z $IUSER ]] && return;

# handy shortcuts
alias -- -='cd -'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

# single letter access to common tools
alias a='source $CUST_CONFS/bash.alias'
alias b='env -i bash -norc -noprofile'
alias c='clear'
alias d='date'
alias h='hostname -s'
alias j='jobs -l'
alias l='ls'
alias t='telnet'
alias z='fortune | cowsay -n; export PS1_COLOR=dark; ps1_prompt; export PS1_COLOR=light; bash_colors'

# common options
alias more='less'

# handy abbrevations
alias yslow='systemd-analyze plot > ~/SystemdAnalyzePlot.svg'   # check why boot is slow
alias cal3='cal -3'             # show 3 months
alias dfh=$(echo "df -h")       # disk freespace is human
alias dush='du -sh'             # disk usage is human
alias filesize='du -k'          # works on all platforms. alternate: 'stat -c "%s"' on Linux, 'stat -f "%z"' on FreeBSD
alias greprinse='grep -rinse'
alias l.='ls .*'
alias la='ls -A'
alias lh='ls -lh'
alias ll='ls -laF'
alias lld='ls -lUd */'
alias lr='ls -lR'
alias lss='ls -AlhqS'                    # long ls by size
alias ltr='ls -ltr'
alias psf='ps -f'
alias lsx='ls -Nalin'                    # 'power' ls. --color=never
alias psmem='ps aux | sort -brk 4 | head'
alias pstop='ps -eo pcpu,pid,user,args | sort -r -k1 | less'
alias psux='ps -ux'
alias tf='tail -f'
alias historyw='history -w'     # write unsaved history to ~/.bash_history
alias historyr='history -n'     # read unread history from ~/.bash_history and append to current history
alias dnsmasqr='sudo invoke-rc.d dnsmasq restart'   # reload new config

# typing mistakes
alias xs='cd'

# Admin Power Tools
(own dstat)     && alias dstata='dstat -cdngmsply --bw'
(own minicom)   && alias minicom='minicom -c on'
(own nmon)      && alias nmon='nmon -g $CUST_CONFS/nmon_disks.dat'
(own pgrep)     && alias pgrep='pgrep -u $(id -nu)'
(own pkill)     && alias pkill='pkill -u $(id -nu)'
(own xterm)     && alias xt='xterm -fa courier -fs 12 -geometry 100x20 -ls &'

# devel stuff
# (own ntp) && alias                # ntp servers: time.windows.com time.google.com time.nist.gov pool.ntp.org
(own autoexpect) && alias autoexpecta='autoexpect -f script-`date +%Y%m%d-%T`.exp'
(own ctags)     && alias ctb='ctags --extra=+q --fields=afmikKlnsSz --c++-kinds=+p -a -R > /dev/null 2>&1'   # Exuberant ctags
(own git)       && alias g='git'
(own gitk)      && alias gitka='gitk --all &'               # gui to see branching & merges visually
(own gmake)     && alias make='gmake -s'
(own hexdump)   && alias hexdumpc='hexdump -C'              # canonical hex dump
(own od)        && alias hd='od -Ax -tx1z -v'               # what most people want from od (hexdump)
(own script)    && alias scripta='script -a script-$(date +%Y%m%d-%T).log'
(own ssh)       && alias ssh='ssh -p 22 -Y'                 # -vvvv is extra verbose. X11-fwd with -Y better than -X. secret-key-fwd using -A is dangerous
(own ssh)       && alias sshj='ssh -J'                      # ssh to internal host through a jump-server. ssh -J <jump-svr-ip> <internal-host-ip>
(own ssh-keygen)&& alias ssh-keygen-rk='f(){ ssh-keygen -f $1 -C $1; }; f'
(own ssh-keygen)&& alias ssh-keygen-rm='f(){ ssh-keygen -R $1; rm -f ~/.ssh/sockets/*$1*; }; f'
# Good way to check current sessions: Each ~/.vnc/<prefix>*.pid file indicates a VNC session opened by user in prefix host
(own vncserver) && alias vncserver='vncserver -geometry 1920x1080'   # if copy-paste doesnt work, start 'vncconfig &'. For tigervnc extra option '-localhost no'
(own konsole)   && alias k='konsole --nomenubar --vt_sz 100x20 &'

# handy alias (pbcopy in mac) in xterm to copy text to clipboard via pipe cmd. ex: $ ls -l | copy
#(own xclip)     && alias copy='xclip -sel clip'        # sudo apt install xclip
(own xsel)      && alias copy='xsel -ib'                # sudo apt install xsel

if own apachectl; then
    alias web='cd /Library/WebServer/Documents/'
    alias cgi='cd /Library/WebServer/CGI-Executables/'
fi

if own curl; then
    alias curld='curl -# -O -J -L'   # -J: resolve name from header, -L: handle redirects, -C - : continue from where left off
    alias webhdr='curl -I'
fi

# version control aliases
if own cleartool; then
    alias catcs='ct catcs | grep -v "#" | grep -v "^$"'
    alias ci='ct ci -nc'
    alias cl='perl /clearcase/admin/tools/tcm/clearlicense.pl -a'
    alias co='ct co -c "Updating files ........................ " '
    alias coun='ct co -unr -c "Updating file ......................... " '
    alias ct='cleartool'
    alias ctclean='mkdir tmp; mv `find . -name "*.keep"` tmp/'
    alias ctd='ct diff -serial_format -pred -opt -blank_ignore '
    alias ctdiff='ct diff -serial_format -opt -blank_ignore '
    alias ctupdate='ct update -log log'
    alias edcs='ct edcs'
    alias findhijacked='ct ls -recurse | grep "hijacked"'
    alias lsco='ct lsco -cview -s -r'
    alias lscoall='ct lsco -avobs -areplicas -s -r'
    alias lscovob='ct lsco -cview -avobs -s'
    alias lshis='ct lshis '
    alias lspriv='ct lsprivate'
    alias lsview='ct lsview | grep rkks | grep "\*"'
    alias lsvtree='ct lsvtree '
    alias mkbrtype='ct mkbrtype -nc -pbranch'
    alias mkelem='ct mkelem -c "Creating a new element ............... "'
    alias mklbtype='ct mklbtype -nc -global'
    alias pwv='ct pwv'
    alias setcs='ct setcs '
    alias setview='ct setview'
    alias unco='ct unco -rm'    # -rm flag removes .keep files
    alias xc='xclearcase'
fi

# dev environment
if own bugz; then
    alias bugzs='bugz search'
    alias bugzg='bugz get'
    alias bugzt='bugz set'
fi

if own cscope; then
    alias css='cscope_cgtags.sh -g 0'        #symbol
    alias csg='cscope_cgtags.sh -g 1'        #global
    alias csd='cscope_cgtags.sh -g 2'        #called
    alias csc='cscope_cgtags.sh -g 3'        #calling
    alias cst='cscope_cgtags.sh -g 4'        #text search
    alias csa='cscope_cgtags.sh -g 5'        #change text
    alias cse='cscope_cgtags.sh -g 6'        #egrep
    alias csf='cscope_cgtags.sh -g 7'        #file
    alias csi='cscope_cgtags.sh -g 8'        #include
    alias csl='cscope -de -p 5'  # No '-f cscope.out -R' options. Confuses cscope
    alias csb='cscope_cgtags.sh -c &'
    alias kscope='cscope -ck -p3'                # kernel symbols
fi

if own cvs; then
    alias cvsci='cvs commit'
    alias cvsco='cvs update'
fi

if own diff; then
    alias diffc='diff -Ncrp --exclude-from=$CUST_CONFS/diffexclude --speed-large-files'   # -a is dangerous
    alias diffqr='diff -qr --exclude-from=$CUST_CONFS/diffexclude --speed-large-files'    # -a is dangerous
    alias diffu='diff -Nurp --exclude-from=$CUST_CONFS/diffexclude --speed-large-files'   # Never use -rns. When piping is used, -n creates nuances
fi

if own find; then
    alias cloc="find . -name \*.[ch] -exec wc -l {} \; | awk '{ sum += $1; } END { print sum; }'"
    alias findbig='find . -type f -exec ls -s {} \; | sort -n -r | head -5'
    alias finddup='find -not -empty -type f -printf "%s\n" | sort -rn | uniq -d | xargs -I{} -n1 find -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate'
fi

if own gcc; then
    alias gccs='gcc -Wa,-adhln -g'          # generate assembly mixed source code. redirect to .s file
    alias gccg='gcc -g3 -gdwarf-2 -ggdb'    # include debug & macro info in binary
fi

if own gdb; then
    alias bt='echo 0 | gdb -batch-silent -ex "run" -ex "set logging overwrite on" -ex "set logging file gdb.bt" -ex "set logging on" -ex "set pagination off" -ex "handle SIG33 pass nostop noprint" -ex "echo backtrace:\n" -ex "backtrace full" -ex "echo \n\nregisters:\n" -ex "info registers" -ex "echo \n\ncurrent instructions:\n" -ex "x/16i \$pc" -ex "echo \n\nthreads backtrace:\n" -ex "thread apply all backtrace" -ex "set logging off" -ex "quit" --args'            # bt $crashing_application to get the crash information.
    alias gdb='gdb -q'
fi

if own netstat; then
    alias netstatp='netstat -upatent'           # -tulpn | grep :80
    alias netstatc='netstat -eeptu'             # connected sockets
    alias netstatl='netstat -leeptu'            # listening sockets
fi

if own objdump; then
    alias objdump-dbg='objdump -d -S --file-start-context --prefix-addresses -l'
    alias objdump-sane='objdump -C -S -r -R -l'   # disassemble with source code. -DRTgrstx doesnt work
fi

if own screen; then
    alias sls='screen -ls'
    alias sx='screen -x'
fi

if own vim; then
    alias vo='vim -u ~/.vimrc'                  # typo
    alias v="vim -u ~/.vimrc -R"                # read-only
    alias vd="vim -u ~/.vimrc -d"               # diff mode
    alias vi='vim -u ~/.vimrc'
    alias gv="gvim -u ~/.gvimrc"                # gvim
    alias vp='vim -u ~/.vimrc --noplugin'       # no plugins
    alias vt='vim -t'                           # open given tag symbol in vim
    alias vu='vim -u NONE --noplugin'           # no ~/.vimrc, no plugins
    alias vim='vim -u ~/.vimrc'
fi

if own git.sh; then
    alias github='git.sh -c ~/conf/git.config'
fi

if own mkdir.sh; then
    alias mkprdir='mkdir.sh -p'
    alias mkrlidir='mkdir.sh -r'
    alias mkprojdir='mkdir.sh -j'
    alias mktestdir='mkdir -p test-$(date +%d%b%Y)'
fi

if own tmux.sh; then
    alias tl='tmux.sh -l'
    alias ta='tmux.sh -a rk'
    alias tn='tmux.sh -n rk'
    alias te='tmux.sh -e ~/.tmux_cmds'
    alias ts='tmux.sh -s'               # dangerous to auto-input sess-name 'rk'
    alias tmux='env -i TERM="$TERM" PATH="$PATH" tmux -2'    # always assume 256 color support. Key to bright colors
fi

if own convert.sh; then
    alias h2d='convert.sh -f h -t d'
    alias o2d='convert.sh -f o -t d'
    alias b2d='convert.sh -f b -t d'
    alias h2o='convert.sh -f h -t o'
    alias d2o='convert.sh -f d -t o'
    alias b2o='convert.sh -f b -t o'
    alias h2b='convert.sh -f h -t b'
    alias o2b='convert.sh -f o -t b'
    alias d2b='convert.sh -f d -t b'
    alias d2h='convert.sh -f d -t h'
    alias o2h='convert.sh -f o -t h'
    alias b2h='convert.sh -f b -t h'
fi

#if own network.sh; then
#    alias pinga='network.sh -p'
#    alias nslookupa='network.sh -d'
#fi

if own VBoxManage; then
    alias vb='VBoxManage'
    alias vbb='vbox.sh -b UbuntuLinux'
    alias vbc='vbox.sh -c'
fi

if own wget; then
    # Download an entire website
    # -b/--background: run as a background job
    # -c/--continue: continue with partially downloaded files
    # -k/--convert-links: replace links within html to point to local links
    # -p/--page-requisites: Download all meta-data/links as necessary to display html
    # -E/--html-extension: if html content file doesn't have .html extension, add it
    # -m/--mirror: Create local copy as exact mirror of online site
    # -r/--recursive: recursive retrieval
    # -np/--no-parent: do not crawl into parent directory as part of redirection (avoid loop)
    # -o logfile/--output-file=logfile: Log wget messages to logfile
    # -t number/--tries=number: number of retries for given link
    # -w seconds/--wait=seconds: wait these many seconds before retrieval (fool bot stopper)
    # --random-wait: if -w is provided, changes wait period to random
    # --limit-rate=<N>K : limit the download rate (again to fool bot stopper)
    # -nc : no clobber, no overwrite of previously downloaded file. Can't work with convert-links
    alias wgetr='wget -mrEbckp -o wget.log -t 3 -w 1 -e robots=off -U mozilla --random-wait --limit-rate=20K -np'
fi

if [ "$UNAMES" == "FreeBSD" ]; then
    alias ls='ls -G'
    (own ping)  && alias pingf='ping -c 5'              # Only root user can give -i.2 (fast ping)
elif [ "$UNAMES" == "Darwin" ]; then
    alias ls='gls --color=always -F'                      # ls -G
    (own ping)  && alias pingf='ping -c 5 -i.2'
    alias gvim='open -a MacVim'
    alias wireshark='open -n /Applications/Wireshark.app'
elif [ "$UNAMES" == "Linux" ]; then
    alias ls='ls --color=always -F'
    (own free)  && alias memfree='free -m'              # available memory
    (own fuser) && alias fusern='fuser -v -n'           # [tcp, udp, sctp] <port>. who is using given port
    (own ping)  && alias pingf='ping -c 5 -s.2'         # fast ping
    (own xrdb)  && alias Xdefaults='xrdb -load ~/.Xdefaults'
    (own zcat)  && alias gzcat=/bin/zcat
else
    alias ls='ls --color=always -F'
fi

if own crypt.sh; then
    alias passe='pe() { crypt.sh -p $COMP_CONFS/rand -e $@; }; pe' # enc
    alias passd='pd() { crypt.sh -p $COMP_CONFS/rand -d $@; }; pd' # dec
fi

if own gcalcli; then
    alias gcala='gcalcli add' # add to calendar
    alias gcalc='gcalcli calm' # view calendar
fi

# Syntax:
# $ wakeonlan mac-1 mac-2
# $ wakeonlan -i 192.168.1.255 mac
# $ wakeonlan -i 192.168.1.255 -p PORT mac
# $ wakeonlan -f ~/.wol
if own wakeonlan; then
    alias wol='wakeonlan -f ~/.wol'     # power up the device
fi

[[ -f $COMP_CONFS/bash.alias ]] && { source_script $COMP_CONFS/bash.alias; }
